<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.6</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>tech.jgross</groupId>
	<artifactId>service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<description>The Justin Gross service.</description>
	<name>service</name>
	<properties>
		<java.version>11</java.version>
	</properties>
	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-webflux -->
		<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-webflux</artifactId>
				<version>2.6.0</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

    <dependency>
  	  <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-integration</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		 <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-rsocket</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-rsocket</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-messaging</artifactId>
		</dependency>
		<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<scope>runtime</scope>
		</dependency>

		<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>2.3.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20210307</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.22</version>
			<scope>provided</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.modelmapper/modelmapper -->
		<dependency>
				<groupId>org.modelmapper</groupId>
				<artifactId>modelmapper</artifactId>
				<version>2.4.4</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka -->
		<dependency>
				<groupId>org.springframework.kafka</groupId>
				<artifactId>spring-kafka</artifactId>
				<version>2.8.0</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.7</version>
				<executions>
						<execution>
								<goals>
										<goal>prepare-agent</goal>
								</goals>
						</execution>
						<execution>
								<id>report-on-prepare</id>
								<phase>prepare-package</phase>
								<goals>
										<goal>report</goal>
								</goals>
						</execution>
						<execution>
								<id>report-on-test</id>
								<phase>test</phase>
								<goals>
										<goal>report</goal>
								</goals>
						</execution>
				</executions>
		</plugin>
		</plugins>
	</build>

	<profiles>
			<profile>
					<id>dev</id>
					<activation>
							<activeByDefault>true</activeByDefault>
					</activation>
					<properties>
							<spring.profiles.active>dev</spring.profiles.active>
							<server.error.include-stacktrace>always</server.error.include-stacktrace>
							<spring.datasource.url>jdbc:h2:mem:testdb</spring.datasource.url>
							<spring.datasource.username>sa</spring.datasource.username>
							<spring.datasource.password></spring.datasource.password>
							<spring.datasource.driverClassName>org.h2.Driver</spring.datasource.driverClassName>
							<spring.jpa.show-sql>true</spring.jpa.show-sql>
							<spring.jpa.properties.hibernate.dialect>org.hibernate.dialect.H2Dialect</spring.jpa.properties.hibernate.dialect>
							<spring.jpa.hibernate.ddl-auto>update</spring.jpa.hibernate.ddl-auto>
							<spring.h2.console.enabled>true</spring.h2.console.enabled>
							<spring.h2.console.path>/h2-ui</spring.h2.console.path>
							<spring.kafka.bootstrap-servers>services.jgross.tech:9092</spring.kafka.bootstrap-servers>
							<spring.rsocket.server.port>7000</spring.rsocket.server.port>
							<spring.rsocket.server.transport>websocket</spring.rsocket.server.transport>
							<spring.rsocket.server.mapping-path>/rsocket</spring.rsocket.server.mapping-path>
					</properties>
			</profile>
			<profile>
					<id>prod</id>
					<properties>
							<spring.profiles.active>prod</spring.profiles.active>
							<server.error.include-stacktrace>never</server.error.include-stacktrace>
							<spring.datasource.url>jdbc:h2:mem:testdb</spring.datasource.url>
							<spring.datasource.username>sa</spring.datasource.username>
							<spring.datasource.password></spring.datasource.password>
							<spring.datasource.driverClassName>org.h2.Driver</spring.datasource.driverClassName>
							<spring.jpa.show-sql>true</spring.jpa.show-sql>
							<spring.jpa.properties.hibernate.dialect>org.hibernate.dialect.H2Dialect</spring.jpa.properties.hibernate.dialect>
							<spring.jpa.hibernate.ddl-auto>update</spring.jpa.hibernate.ddl-auto>
							<spring.h2.console.enabled>true</spring.h2.console.enabled>
							<spring.h2.console.path>/h2-ui</spring.h2.console.path>
							<spring.kafka.bootstrap-servers>services.jgross.tech:9092</spring.kafka.bootstrap-servers>
							<spring.rsocket.server.port>7000</spring.rsocket.server.port>
							<spring.rsocket.server.transport>websocket</spring.rsocket.server.transport>
							<spring.rsocket.server.mapping-path>/rsocket</spring.rsocket.server.mapping-path>
					</properties>
			</profile>
			<profile>
					<id>unit-test</id>
					<properties>
							<spring.profiles.active>unit-test</spring.profiles.active>
							<server.error.include-stacktrace>always</server.error.include-stacktrace>
							<spring.datasource.url>jdbc:h2:mem:testdb</spring.datasource.url>
							<spring.datasource.username>sa</spring.datasource.username>
							<spring.datasource.password></spring.datasource.password>
							<spring.datasource.driverClassName>org.h2.Driver</spring.datasource.driverClassName>
							<spring.jpa.show-sql>true</spring.jpa.show-sql>
							<spring.jpa.properties.hibernate.dialect>org.hibernate.dialect.H2Dialect</spring.jpa.properties.hibernate.dialect>
							<spring.jpa.hibernate.ddl-auto>update</spring.jpa.hibernate.ddl-auto>
							<spring.h2.console.enabled>true</spring.h2.console.enabled>
							<spring.h2.console.path>/h2-ui</spring.h2.console.path>
							<spring.kafka.bootstrap-servers>localhost:9092</spring.kafka.bootstrap-servers>
							<spring.rsocket.server.port>7000</spring.rsocket.server.port>
							<spring.rsocket.server.transport>websocket</spring.rsocket.server.transport>
							<spring.rsocket.server.mapping-path>/rsocket</spring.rsocket.server.mapping-path>
					</properties>
			</profile>
			<profile>
					<id>ix-test</id>
					<properties>
							<spring.profiles.active>ix-test</spring.profiles.active>
							<server.error.include-stacktrace>always</server.error.include-stacktrace>
							<spring.datasource.url>jdbc:h2:mem:testdb</spring.datasource.url>
							<spring.datasource.username>sa</spring.datasource.username>
							<spring.datasource.password></spring.datasource.password>
							<spring.datasource.driverClassName>org.h2.Driver</spring.datasource.driverClassName>
							<spring.jpa.show-sql>true</spring.jpa.show-sql>
							<spring.jpa.properties.hibernate.dialect>org.hibernate.dialect.H2Dialect</spring.jpa.properties.hibernate.dialect>
							<spring.jpa.hibernate.ddl-auto>update</spring.jpa.hibernate.ddl-auto>
							<spring.h2.console.enabled>true</spring.h2.console.enabled>
							<spring.h2.console.path>/h2-ui</spring.h2.console.path>
							<spring.kafka.bootstrap-servers>localhost:9092</spring.kafka.bootstrap-servers>
							<spring.rsocket.server.port>7000</spring.rsocket.server.port>
							<spring.rsocket.server.transport>websocket</spring.rsocket.server.transport>
							<spring.rsocket.server.mapping-path>/rsocket</spring.rsocket.server.mapping-path>
					</properties>
			</profile>
	</profiles>
</project>
